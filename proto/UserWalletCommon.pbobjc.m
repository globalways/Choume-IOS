// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.wallet.common.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "UserWalletCommon.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - UserWalletCommonRoot

@implementation UserWalletCommonRoot

@end

#pragma mark - UserWalletCommonRoot_FileDescriptor

static GPBFileDescriptor *UserWalletCommonRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"proto"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum ThirdPartyWalletType

GPBEnumDescriptor *ThirdPartyWalletType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "InvalidTpwt", .number = ThirdPartyWalletType_InvalidTpwt },
      { .name = "AlipayTpwt", .number = ThirdPartyWalletType_AlipayTpwt },
      { .name = "WeixinTpwt", .number = ThirdPartyWalletType_WeixinTpwt },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ThirdPartyWalletType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:ThirdPartyWalletType_IsValidValue];
  }
  return descriptor;
}

BOOL ThirdPartyWalletType_IsValidValue(int32_t value__) {
  switch (value__) {
    case ThirdPartyWalletType_InvalidTpwt:
    case ThirdPartyWalletType_AlipayTpwt:
    case ThirdPartyWalletType_WeixinTpwt:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum UserWalletHistoryType

GPBEnumDescriptor *UserWalletHistoryType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "InvalidWht", .number = UserWalletHistoryType_InvalidWht },
      { .name = "ConsumeWht", .number = UserWalletHistoryType_ConsumeWht },
      { .name = "RechargeWht", .number = UserWalletHistoryType_RechargeWht },
      { .name = "RefundWht", .number = UserWalletHistoryType_RefundWht },
      { .name = "WithdrawWht", .number = UserWalletHistoryType_WithdrawWht },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(UserWalletHistoryType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:UserWalletHistoryType_IsValidValue];
  }
  return descriptor;
}

BOOL UserWalletHistoryType_IsValidValue(int32_t value__) {
  switch (value__) {
    case UserWalletHistoryType_InvalidWht:
    case UserWalletHistoryType_ConsumeWht:
    case UserWalletHistoryType_RechargeWht:
    case UserWalletHistoryType_RefundWht:
    case UserWalletHistoryType_WithdrawWht:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum UserWalletHistoryStatus

GPBEnumDescriptor *UserWalletHistoryStatus_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "InvalidWhs", .number = UserWalletHistoryStatus_InvalidWhs },
      { .name = "PendingWhs", .number = UserWalletHistoryStatus_PendingWhs },
      { .name = "SuccessWhs", .number = UserWalletHistoryStatus_SuccessWhs },
      { .name = "FailWhs", .number = UserWalletHistoryStatus_FailWhs },
      { .name = "CancelWhs", .number = UserWalletHistoryStatus_CancelWhs },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(UserWalletHistoryStatus)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:UserWalletHistoryStatus_IsValidValue];
  }
  return descriptor;
}

BOOL UserWalletHistoryStatus_IsValidValue(int32_t value__) {
  switch (value__) {
    case UserWalletHistoryStatus_InvalidWhs:
    case UserWalletHistoryStatus_PendingWhs:
    case UserWalletHistoryStatus_SuccessWhs:
    case UserWalletHistoryStatus_FailWhs:
    case UserWalletHistoryStatus_CancelWhs:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum UserWalletWithdrawStatus

GPBEnumDescriptor *UserWalletWithdrawStatus_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "InvalidUwwds", .number = UserWalletWithdrawStatus_InvalidUwwds },
      { .name = "Applying", .number = UserWalletWithdrawStatus_Applying },
      { .name = "Reject", .number = UserWalletWithdrawStatus_Reject },
      { .name = "Complete", .number = UserWalletWithdrawStatus_Complete },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(UserWalletWithdrawStatus)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:UserWalletWithdrawStatus_IsValidValue];
  }
  return descriptor;
}

BOOL UserWalletWithdrawStatus_IsValidValue(int32_t value__) {
  switch (value__) {
    case UserWalletWithdrawStatus_InvalidUwwds:
    case UserWalletWithdrawStatus_Applying:
    case UserWalletWithdrawStatus_Reject:
    case UserWalletWithdrawStatus_Complete:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - UserWallet

@implementation UserWallet

@dynamic id_p;
@dynamic hongId;
@dynamic amount;
@dynamic thirdPartyWalletsArray, thirdPartyWalletsArray_Count;

typedef struct UserWallet__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *thirdPartyWalletsArray;
  int64_t id_p;
  uint64_t hongId;
  uint64_t amount;
} UserWallet__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = UserWallet_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(UserWallet__storage_, id_p),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "hongId",
        .number = UserWallet_FieldNumber_HongId,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(UserWallet__storage_, hongId),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "amount",
        .number = UserWallet_FieldNumber_Amount,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(UserWallet__storage_, amount),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "thirdPartyWalletsArray",
        .number = UserWallet_FieldNumber_ThirdPartyWalletsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeMessage,
        .offset = offsetof(UserWallet__storage_, thirdPartyWalletsArray),
        .defaultValue.valueMessage = nil,
        .dataTypeSpecific.className = GPBStringifySymbol(ThirdPartyWallet),
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\002\002\006\000\004\000thirdPartyWallets\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserWallet class]
                                     rootClass:[UserWalletCommonRoot class]
                                          file:UserWalletCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(UserWallet__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ThirdPartyWallet

@implementation ThirdPartyWallet

@dynamic id_p;
@dynamic name;
@dynamic account;
@dynamic userWalletId;
@dynamic varified;
@dynamic type;
@dynamic created;
@dynamic rechargeAmount;
@dynamic orderId;
@dynamic auditor;
@dynamic appId;
@dynamic hongId;

typedef struct ThirdPartyWallet__storage_ {
  uint32_t _has_storage_[1];
  BOOL varified;
  ThirdPartyWalletType type;
  NSString *name;
  NSString *account;
  NSString *orderId;
  NSString *appId;
  int64_t id_p;
  int64_t userWalletId;
  int64_t created;
  uint64_t rechargeAmount;
  uint64_t auditor;
  uint64_t hongId;
} ThirdPartyWallet__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = ThirdPartyWallet_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(ThirdPartyWallet__storage_, id_p),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "name",
        .number = ThirdPartyWallet_FieldNumber_Name,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(ThirdPartyWallet__storage_, name),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "account",
        .number = ThirdPartyWallet_FieldNumber_Account,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(ThirdPartyWallet__storage_, account),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userWalletId",
        .number = ThirdPartyWallet_FieldNumber_UserWalletId,
        .hasIndex = 3,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(ThirdPartyWallet__storage_, userWalletId),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "varified",
        .number = ThirdPartyWallet_FieldNumber_Varified,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(ThirdPartyWallet__storage_, varified),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = ThirdPartyWallet_FieldNumber_Type,
        .hasIndex = 5,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(ThirdPartyWallet__storage_, type),
        .defaultValue.valueEnum = ThirdPartyWalletType_InvalidTpwt,
        .dataTypeSpecific.enumDescFunc = ThirdPartyWalletType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "created",
        .number = ThirdPartyWallet_FieldNumber_Created,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(ThirdPartyWallet__storage_, created),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "rechargeAmount",
        .number = ThirdPartyWallet_FieldNumber_RechargeAmount,
        .hasIndex = 7,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(ThirdPartyWallet__storage_, rechargeAmount),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "orderId",
        .number = ThirdPartyWallet_FieldNumber_OrderId,
        .hasIndex = 8,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(ThirdPartyWallet__storage_, orderId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "auditor",
        .number = ThirdPartyWallet_FieldNumber_Auditor,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(ThirdPartyWallet__storage_, auditor),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "appId",
        .number = ThirdPartyWallet_FieldNumber_AppId,
        .hasIndex = 10,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(ThirdPartyWallet__storage_, appId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "hongId",
        .number = ThirdPartyWallet_FieldNumber_HongId,
        .hasIndex = 11,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(ThirdPartyWallet__storage_, hongId),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\005\004\014\000\010\016\000\t\007\000\013\005\000\014\006\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ThirdPartyWallet class]
                                     rootClass:[UserWalletCommonRoot class]
                                          file:UserWalletCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(ThirdPartyWallet__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t ThirdPartyWallet_Type_RawValue(ThirdPartyWallet *message) {
  GPBDescriptor *descriptor = [ThirdPartyWallet descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ThirdPartyWallet_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetThirdPartyWallet_Type_RawValue(ThirdPartyWallet *message, int32_t value) {
  GPBDescriptor *descriptor = [ThirdPartyWallet descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:ThirdPartyWallet_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UserWalletHistory

@implementation UserWalletHistory

@dynamic id_p;
@dynamic hongId;
@dynamic type;
@dynamic amount;
@dynamic created;
@dynamic subject;
@dynamic remain;
@dynamic appId;
@dynamic orderId;
@dynamic status;
@dynamic auditor;

typedef struct UserWalletHistory__storage_ {
  uint32_t _has_storage_[1];
  UserWalletHistoryType type;
  UserWalletHistoryStatus status;
  NSString *subject;
  NSString *appId;
  NSString *orderId;
  int64_t id_p;
  uint64_t hongId;
  uint64_t amount;
  int64_t created;
  uint64_t remain;
  uint64_t auditor;
} UserWalletHistory__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = UserWalletHistory_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(UserWalletHistory__storage_, id_p),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "hongId",
        .number = UserWalletHistory_FieldNumber_HongId,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(UserWalletHistory__storage_, hongId),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = UserWalletHistory_FieldNumber_Type,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(UserWalletHistory__storage_, type),
        .defaultValue.valueEnum = UserWalletHistoryType_InvalidWht,
        .dataTypeSpecific.enumDescFunc = UserWalletHistoryType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "amount",
        .number = UserWalletHistory_FieldNumber_Amount,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(UserWalletHistory__storage_, amount),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "created",
        .number = UserWalletHistory_FieldNumber_Created,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(UserWalletHistory__storage_, created),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "subject",
        .number = UserWalletHistory_FieldNumber_Subject,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserWalletHistory__storage_, subject),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "remain",
        .number = UserWalletHistory_FieldNumber_Remain,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(UserWalletHistory__storage_, remain),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "appId",
        .number = UserWalletHistory_FieldNumber_AppId,
        .hasIndex = 7,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserWalletHistory__storage_, appId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "orderId",
        .number = UserWalletHistory_FieldNumber_OrderId,
        .hasIndex = 8,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserWalletHistory__storage_, orderId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "status",
        .number = UserWalletHistory_FieldNumber_Status,
        .hasIndex = 9,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(UserWalletHistory__storage_, status),
        .defaultValue.valueEnum = UserWalletHistoryStatus_InvalidWhs,
        .dataTypeSpecific.enumDescFunc = UserWalletHistoryStatus_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "auditor",
        .number = UserWalletHistory_FieldNumber_Auditor,
        .hasIndex = 10,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(UserWalletHistory__storage_, auditor),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\003\002\006\000\010\005\000\t\007\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserWalletHistory class]
                                     rootClass:[UserWalletCommonRoot class]
                                          file:UserWalletCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(UserWalletHistory__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UserWalletHistory_Type_RawValue(UserWalletHistory *message) {
  GPBDescriptor *descriptor = [UserWalletHistory descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserWalletHistory_FieldNumber_Type];
  return GPBGetMessageInt32Field(message, field);
}

void SetUserWalletHistory_Type_RawValue(UserWalletHistory *message, int32_t value) {
  GPBDescriptor *descriptor = [UserWalletHistory descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserWalletHistory_FieldNumber_Type];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t UserWalletHistory_Status_RawValue(UserWalletHistory *message) {
  GPBDescriptor *descriptor = [UserWalletHistory descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserWalletHistory_FieldNumber_Status];
  return GPBGetMessageInt32Field(message, field);
}

void SetUserWalletHistory_Status_RawValue(UserWalletHistory *message, int32_t value) {
  GPBDescriptor *descriptor = [UserWalletHistory descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserWalletHistory_FieldNumber_Status];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - UserWalletWithdraw

@implementation UserWalletWithdraw

@dynamic id_p;
@dynamic hongId;
@dynamic name;
@dynamic amount;
@dynamic status;
@dynamic orderId;
@dynamic applyTime;
@dynamic handleTime;
@dynamic account;
@dynamic walletType;
@dynamic historyId;
@dynamic auditor;
@dynamic commit;
@dynamic appId;

typedef struct UserWalletWithdraw__storage_ {
  uint32_t _has_storage_[1];
  UserWalletWithdrawStatus status;
  ThirdPartyWalletType walletType;
  NSString *name;
  NSString *orderId;
  NSString *account;
  NSString *commit;
  NSString *appId;
  int64_t id_p;
  uint64_t hongId;
  uint64_t amount;
  int64_t applyTime;
  int64_t handleTime;
  int64_t historyId;
  uint64_t auditor;
} UserWalletWithdraw__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = UserWalletWithdraw_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(UserWalletWithdraw__storage_, id_p),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "hongId",
        .number = UserWalletWithdraw_FieldNumber_HongId,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(UserWalletWithdraw__storage_, hongId),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "name",
        .number = UserWalletWithdraw_FieldNumber_Name,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserWalletWithdraw__storage_, name),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "amount",
        .number = UserWalletWithdraw_FieldNumber_Amount,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(UserWalletWithdraw__storage_, amount),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "status",
        .number = UserWalletWithdraw_FieldNumber_Status,
        .hasIndex = 4,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(UserWalletWithdraw__storage_, status),
        .defaultValue.valueEnum = UserWalletWithdrawStatus_InvalidUwwds,
        .dataTypeSpecific.enumDescFunc = UserWalletWithdrawStatus_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "orderId",
        .number = UserWalletWithdraw_FieldNumber_OrderId,
        .hasIndex = 5,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserWalletWithdraw__storage_, orderId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "applyTime",
        .number = UserWalletWithdraw_FieldNumber_ApplyTime,
        .hasIndex = 6,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(UserWalletWithdraw__storage_, applyTime),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "handleTime",
        .number = UserWalletWithdraw_FieldNumber_HandleTime,
        .hasIndex = 7,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(UserWalletWithdraw__storage_, handleTime),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "account",
        .number = UserWalletWithdraw_FieldNumber_Account,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserWalletWithdraw__storage_, account),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "walletType",
        .number = UserWalletWithdraw_FieldNumber_WalletType,
        .hasIndex = 9,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
        .offset = offsetof(UserWalletWithdraw__storage_, walletType),
        .defaultValue.valueEnum = ThirdPartyWalletType_InvalidTpwt,
        .dataTypeSpecific.enumDescFunc = ThirdPartyWalletType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "historyId",
        .number = UserWalletWithdraw_FieldNumber_HistoryId,
        .hasIndex = 10,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(UserWalletWithdraw__storage_, historyId),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "auditor",
        .number = UserWalletWithdraw_FieldNumber_Auditor,
        .hasIndex = 11,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(UserWalletWithdraw__storage_, auditor),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "commit",
        .number = UserWalletWithdraw_FieldNumber_Commit,
        .hasIndex = 12,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserWalletWithdraw__storage_, commit),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "appId",
        .number = UserWalletWithdraw_FieldNumber_AppId,
        .hasIndex = 13,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(UserWalletWithdraw__storage_, appId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\007\002\006\000\006\007\000\007\t\000\010\n\000\n\n\000\013\t\000\016\005\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[UserWalletWithdraw class]
                                     rootClass:[UserWalletCommonRoot class]
                                          file:UserWalletCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(UserWalletWithdraw__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t UserWalletWithdraw_Status_RawValue(UserWalletWithdraw *message) {
  GPBDescriptor *descriptor = [UserWalletWithdraw descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserWalletWithdraw_FieldNumber_Status];
  return GPBGetMessageInt32Field(message, field);
}

void SetUserWalletWithdraw_Status_RawValue(UserWalletWithdraw *message, int32_t value) {
  GPBDescriptor *descriptor = [UserWalletWithdraw descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserWalletWithdraw_FieldNumber_Status];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t UserWalletWithdraw_WalletType_RawValue(UserWalletWithdraw *message) {
  GPBDescriptor *descriptor = [UserWalletWithdraw descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserWalletWithdraw_FieldNumber_WalletType];
  return GPBGetMessageInt32Field(message, field);
}

void SetUserWalletWithdraw_WalletType_RawValue(UserWalletWithdraw *message, int32_t value) {
  GPBDescriptor *descriptor = [UserWalletWithdraw descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:UserWalletWithdraw_FieldNumber_WalletType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PayDetail

@implementation PayDetail

@dynamic id_p;
@dynamic appId;
@dynamic created;
@dynamic paid;
@dynamic channel;
@dynamic orderNo;
@dynamic clientIp;
@dynamic subject;
@dynamic body;
@dynamic timePaid;
@dynamic pingppId;
@dynamic hongId;
@dynamic amount;
@dynamic refund;

typedef struct PayDetail__storage_ {
  uint32_t _has_storage_[1];
  BOOL paid;
  BOOL refund;
  NSString *appId;
  NSString *channel;
  NSString *orderNo;
  NSString *clientIp;
  NSString *subject;
  NSString *body;
  NSString *pingppId;
  int64_t id_p;
  int64_t created;
  int64_t timePaid;
  uint64_t hongId;
  uint64_t amount;
} PayDetail__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = PayDetail_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(PayDetail__storage_, id_p),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "appId",
        .number = PayDetail_FieldNumber_AppId,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PayDetail__storage_, appId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "created",
        .number = PayDetail_FieldNumber_Created,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(PayDetail__storage_, created),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "paid",
        .number = PayDetail_FieldNumber_Paid,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PayDetail__storage_, paid),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "channel",
        .number = PayDetail_FieldNumber_Channel,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PayDetail__storage_, channel),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "orderNo",
        .number = PayDetail_FieldNumber_OrderNo,
        .hasIndex = 5,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PayDetail__storage_, orderNo),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "clientIp",
        .number = PayDetail_FieldNumber_ClientIp,
        .hasIndex = 6,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PayDetail__storage_, clientIp),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "subject",
        .number = PayDetail_FieldNumber_Subject,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PayDetail__storage_, subject),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "body",
        .number = PayDetail_FieldNumber_Body,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PayDetail__storage_, body),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "timePaid",
        .number = PayDetail_FieldNumber_TimePaid,
        .hasIndex = 9,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
        .offset = offsetof(PayDetail__storage_, timePaid),
        .defaultValue.valueInt64 = 0LL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "pingppId",
        .number = PayDetail_FieldNumber_PingppId,
        .hasIndex = 10,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
        .offset = offsetof(PayDetail__storage_, pingppId),
        .defaultValue.valueString = nil,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "hongId",
        .number = PayDetail_FieldNumber_HongId,
        .hasIndex = 11,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(PayDetail__storage_, hongId),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "amount",
        .number = PayDetail_FieldNumber_Amount,
        .hasIndex = 12,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
        .offset = offsetof(PayDetail__storage_, amount),
        .defaultValue.valueUInt64 = 0ULL,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "refund",
        .number = PayDetail_FieldNumber_Refund,
        .hasIndex = 13,
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
        .offset = offsetof(PayDetail__storage_, refund),
        .defaultValue.valueBool = NO,
        .dataTypeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\006\002\005\000\006\007\000\007\010\000\n\010\000\013\010\000\014\006\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PayDetail class]
                                     rootClass:[UserWalletCommonRoot class]
                                          file:UserWalletCommonRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                        oneofs:NULL
                                    oneofCount:0
                                         enums:NULL
                                     enumCount:0
                                        ranges:NULL
                                    rangeCount:0
                                   storageSize:sizeof(PayDetail__storage_)
                                    wireFormat:NO
                           extraTextFormatInfo:extraTextFormatInfo];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
