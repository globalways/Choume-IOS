// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.wallet.common.proto

#import "GPBProtocolBuffers.h"

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30000
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ThirdPartyWalletType

// 第三方钱包类型 枚举
typedef GPB_ENUM(ThirdPartyWalletType) {
  ThirdPartyWalletType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ThirdPartyWalletType_InvalidTpwt = 0,

  // 支付宝
  ThirdPartyWalletType_AlipayTpwt = 1,

  // 微信
  ThirdPartyWalletType_WeixinTpwt = 2,
};

GPBEnumDescriptor *ThirdPartyWalletType_EnumDescriptor(void);

BOOL ThirdPartyWalletType_IsValidValue(int32_t value);

#pragma mark - Enum UserWalletHistoryType

typedef GPB_ENUM(UserWalletHistoryType) {
  UserWalletHistoryType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UserWalletHistoryType_InvalidWht = 0,

  // 消费
  UserWalletHistoryType_ConsumeWht = 1,

  // 充值
  UserWalletHistoryType_RechargeWht = 2,

  // 退款
  UserWalletHistoryType_RefundWht = 3,

  // 提现
  UserWalletHistoryType_WithdrawWht = 4,
};

GPBEnumDescriptor *UserWalletHistoryType_EnumDescriptor(void);

BOOL UserWalletHistoryType_IsValidValue(int32_t value);

#pragma mark - Enum UserWalletHistoryStatus

typedef GPB_ENUM(UserWalletHistoryStatus) {
  UserWalletHistoryStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UserWalletHistoryStatus_InvalidWhs = 0,

  // 等待
  UserWalletHistoryStatus_PendingWhs = 1,

  // 成功
  UserWalletHistoryStatus_SuccessWhs = 2,

  // 失败
  UserWalletHistoryStatus_FailWhs = 3,

  // 取消
  UserWalletHistoryStatus_CancelWhs = 4,
};

GPBEnumDescriptor *UserWalletHistoryStatus_EnumDescriptor(void);

BOOL UserWalletHistoryStatus_IsValidValue(int32_t value);

#pragma mark - Enum UserWalletWithdrawStatus

// 钱包提现状态
typedef GPB_ENUM(UserWalletWithdrawStatus) {
  UserWalletWithdrawStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UserWalletWithdrawStatus_InvalidUwwds = 0,

  // 申请中
  UserWalletWithdrawStatus_Applying = 1,

  // 拒绝提现
  UserWalletWithdrawStatus_Reject = 2,

  // 提现完成
  UserWalletWithdrawStatus_Complete = 3,
};

GPBEnumDescriptor *UserWalletWithdrawStatus_EnumDescriptor(void);

BOOL UserWalletWithdrawStatus_IsValidValue(int32_t value);

#pragma mark - UserWalletCommonRoot

@interface UserWalletCommonRoot : GPBRootObject

// The base class provides:
//   + (GPBExtensionRegistry *)extensionRegistry;
// which is an GPBExtensionRegistry that includes all the extensions defined by
// this file and all files that it depends on.

@end

#pragma mark - UserWallet

typedef GPB_ENUM(UserWallet_FieldNumber) {
  UserWallet_FieldNumber_Id_p = 1,
  UserWallet_FieldNumber_HongId = 2,
  UserWallet_FieldNumber_Amount = 3,
  UserWallet_FieldNumber_ThirdPartyWalletsArray = 4,
};

// 环途用户钱包
@interface UserWallet : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 用户红id
@property(nonatomic, readwrite) uint64_t hongId;

// 余额，单位分
@property(nonatomic, readwrite) uint64_t amount;

// 绑定的第三方钱包
// |thirdPartyWalletsArray| contains |ThirdPartyWallet|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *thirdPartyWalletsArray;
@property(nonatomic, readonly) NSUInteger thirdPartyWalletsArray_Count;

@end

#pragma mark - ThirdPartyWallet

typedef GPB_ENUM(ThirdPartyWallet_FieldNumber) {
  ThirdPartyWallet_FieldNumber_Id_p = 1,
  ThirdPartyWallet_FieldNumber_Name = 2,
  ThirdPartyWallet_FieldNumber_Account = 3,
  ThirdPartyWallet_FieldNumber_UserWalletId = 4,
  ThirdPartyWallet_FieldNumber_Varified = 5,
  ThirdPartyWallet_FieldNumber_Type = 6,
  ThirdPartyWallet_FieldNumber_Created = 7,
  ThirdPartyWallet_FieldNumber_RechargeAmount = 8,
  ThirdPartyWallet_FieldNumber_OrderId = 9,
  ThirdPartyWallet_FieldNumber_Auditor = 10,
  ThirdPartyWallet_FieldNumber_AppId = 11,
  ThirdPartyWallet_FieldNumber_HongId = 12,
};

// 第三方钱包
@interface ThirdPartyWallet : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 账户名
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

// 账号
@property(nonatomic, readwrite, copy, null_resettable) NSString *account;

// 用户钱包id
@property(nonatomic, readwrite) int64_t userWalletId;

// 是否验证通过
@property(nonatomic, readwrite) BOOL varified;

// 钱包类型
@property(nonatomic, readwrite) ThirdPartyWalletType type;

// 创建时间
@property(nonatomic, readwrite) int64_t created;

// 预打款额度，单位分
@property(nonatomic, readwrite) uint64_t rechargeAmount;

// 预打款订单id
@property(nonatomic, readwrite, copy, null_resettable) NSString *orderId;

// 后台操作人
@property(nonatomic, readwrite) uint64_t auditor;

// 来自哪个app
@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;

@property(nonatomic, readwrite) uint64_t hongId;

@end

int32_t ThirdPartyWallet_Type_RawValue(ThirdPartyWallet *message);
void SetThirdPartyWallet_Type_RawValue(ThirdPartyWallet *message, int32_t value);

#pragma mark - UserWalletHistory

typedef GPB_ENUM(UserWalletHistory_FieldNumber) {
  UserWalletHistory_FieldNumber_Id_p = 1,
  UserWalletHistory_FieldNumber_HongId = 2,
  UserWalletHistory_FieldNumber_Type = 3,
  UserWalletHistory_FieldNumber_Amount = 4,
  UserWalletHistory_FieldNumber_Created = 5,
  UserWalletHistory_FieldNumber_Subject = 6,
  UserWalletHistory_FieldNumber_Remain = 7,
  UserWalletHistory_FieldNumber_AppId = 8,
  UserWalletHistory_FieldNumber_OrderId = 9,
  UserWalletHistory_FieldNumber_Status = 10,
  UserWalletHistory_FieldNumber_Auditor = 11,
};

// 环途用户钱包明细
@interface UserWalletHistory : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 用户红id
@property(nonatomic, readwrite) uint64_t hongId;

// 明细类型
@property(nonatomic, readwrite) UserWalletHistoryType type;

// 额度，单位分
@property(nonatomic, readwrite) uint64_t amount;

// 创建时间
@property(nonatomic, readwrite) int64_t created;

// 标题
@property(nonatomic, readwrite, copy, null_resettable) NSString *subject;

// 剩余余额，单位分
@property(nonatomic, readwrite) uint64_t remain;

// 来自哪个app
@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;

// 订单id
@property(nonatomic, readwrite, copy, null_resettable) NSString *orderId;

// 明细状态
@property(nonatomic, readwrite) UserWalletHistoryStatus status;

// 操作者
@property(nonatomic, readwrite) uint64_t auditor;

@end

int32_t UserWalletHistory_Type_RawValue(UserWalletHistory *message);
void SetUserWalletHistory_Type_RawValue(UserWalletHistory *message, int32_t value);

int32_t UserWalletHistory_Status_RawValue(UserWalletHistory *message);
void SetUserWalletHistory_Status_RawValue(UserWalletHistory *message, int32_t value);

#pragma mark - UserWalletWithdraw

typedef GPB_ENUM(UserWalletWithdraw_FieldNumber) {
  UserWalletWithdraw_FieldNumber_Id_p = 1,
  UserWalletWithdraw_FieldNumber_HongId = 2,
  UserWalletWithdraw_FieldNumber_Name = 3,
  UserWalletWithdraw_FieldNumber_Amount = 4,
  UserWalletWithdraw_FieldNumber_Status = 5,
  UserWalletWithdraw_FieldNumber_OrderId = 6,
  UserWalletWithdraw_FieldNumber_ApplyTime = 7,
  UserWalletWithdraw_FieldNumber_HandleTime = 8,
  UserWalletWithdraw_FieldNumber_Account = 9,
  UserWalletWithdraw_FieldNumber_WalletType = 10,
  UserWalletWithdraw_FieldNumber_HistoryId = 11,
  UserWalletWithdraw_FieldNumber_Auditor = 12,
  UserWalletWithdraw_FieldNumber_Commit = 13,
  UserWalletWithdraw_FieldNumber_AppId = 14,
};

// 环途钱包提现
@interface UserWalletWithdraw : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 用户红id
@property(nonatomic, readwrite) uint64_t hongId;

// 账户名
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

// 提现额度，单位分
@property(nonatomic, readwrite) uint64_t amount;

// 提现申请状态
@property(nonatomic, readwrite) UserWalletWithdrawStatus status;

// 订单id
@property(nonatomic, readwrite, copy, null_resettable) NSString *orderId;

// 申请时间
@property(nonatomic, readwrite) int64_t applyTime;

// 处理时间
@property(nonatomic, readwrite) int64_t handleTime;

// 账户名
@property(nonatomic, readwrite, copy, null_resettable) NSString *account;

// 第三方钱包类型
@property(nonatomic, readwrite) ThirdPartyWalletType walletType;

// 支付明细id
@property(nonatomic, readwrite) int64_t historyId;

// 操作者
@property(nonatomic, readwrite) uint64_t auditor;

// 备注
@property(nonatomic, readwrite, copy, null_resettable) NSString *commit;

// 哪个app
@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;

@end

int32_t UserWalletWithdraw_Status_RawValue(UserWalletWithdraw *message);
void SetUserWalletWithdraw_Status_RawValue(UserWalletWithdraw *message, int32_t value);

int32_t UserWalletWithdraw_WalletType_RawValue(UserWalletWithdraw *message);
void SetUserWalletWithdraw_WalletType_RawValue(UserWalletWithdraw *message, int32_t value);

#pragma mark - PayDetail

typedef GPB_ENUM(PayDetail_FieldNumber) {
  PayDetail_FieldNumber_Id_p = 1,
  PayDetail_FieldNumber_AppId = 2,
  PayDetail_FieldNumber_Created = 3,
  PayDetail_FieldNumber_Paid = 4,
  PayDetail_FieldNumber_Channel = 5,
  PayDetail_FieldNumber_OrderNo = 6,
  PayDetail_FieldNumber_ClientIp = 7,
  PayDetail_FieldNumber_Subject = 8,
  PayDetail_FieldNumber_Body = 9,
  PayDetail_FieldNumber_TimePaid = 10,
  PayDetail_FieldNumber_PingppId = 11,
  PayDetail_FieldNumber_HongId = 12,
  PayDetail_FieldNumber_Amount = 13,
  PayDetail_FieldNumber_Refund = 14,
};

// 支付系统明细，统一环途所有的支付明细
@interface PayDetail : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 哪个app的付款
@property(nonatomic, readwrite, copy, null_resettable) NSString *appId;

// 创建时间
@property(nonatomic, readwrite) int64_t created;

// 是否已付款。
@property(nonatomic, readwrite) BOOL paid;

// 支付渠道
@property(nonatomic, readwrite, copy, null_resettable) NSString *channel;

// 商户订单号，适配每个渠道对此参数的要求，结合appId唯一。
@property(nonatomic, readwrite, copy, null_resettable) NSString *orderNo;

// 发起支付请求终端的 ip 地址，格式为 IPV4 整型，如 127.0.0.1。
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientIp;

// 商品的标题
@property(nonatomic, readwrite, copy, null_resettable) NSString *subject;

// 商品的描述信息
@property(nonatomic, readwrite, copy, null_resettable) NSString *body;

// 订单支付完成时间，用 Unix 时间戳表示。
@property(nonatomic, readwrite) int64_t timePaid;

// pingpp 支付id
@property(nonatomic, readwrite, copy, null_resettable) NSString *pingppId;

// 谁购买
@property(nonatomic, readwrite) uint64_t hongId;

// 付款总额
@property(nonatomic, readwrite) uint64_t amount;

// 是否退款
@property(nonatomic, readwrite) BOOL refund;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

// @@protoc_insertion_point(global_scope)
