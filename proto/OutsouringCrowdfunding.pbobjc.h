// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: outsouring.crowdfunding.proto

#import "GPBProtocolBuffers.h"

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30000
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

CF_EXTERN_C_BEGIN

@class CFCBHistory;
@class CfProject;
@class CfProjectComment;
@class CfProjectInvest;
@class CfUser;
@class CfUserCertApply;
@class Response;
@class User;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum CrowdFundingCategory

// 众筹类别
typedef GPB_ENUM(CrowdFundingCategory) {
  CrowdFundingCategory_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CrowdFundingCategory_InvalidCfc = 0,

  // 筹乐子
  CrowdFundingCategory_HappyCfc = 1,

  // 筹票子
  CrowdFundingCategory_MoneyCfc = 2,

  // 筹爱心
  CrowdFundingCategory_LoveCfc = 3,

  // 校园合伙人-项目
  CrowdFundingCategory_ProjectCfc = 4,

  // 校园合伙人-产品
  CrowdFundingCategory_ProductCfc = 5,
};

GPBEnumDescriptor *CrowdFundingCategory_EnumDescriptor(void);

BOOL CrowdFundingCategory_IsValidValue(int32_t value);

#pragma mark - Enum CfProjectTag

// 众筹标签，聚合分类
typedef GPB_ENUM(CfProjectTag) {
  CfProjectTag_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CfProjectTag_InvalidCfpt = 0,

  // 一元秒筹，限时特筹
  CfProjectTag_LimitTimeCfpt = 1,

  // 世纪难题，周末去哪
  CfProjectTag_QuestionCfpt = 2,

  // 热门众筹，非筹不可
  CfProjectTag_HotCfpt = 3,
};

GPBEnumDescriptor *CfProjectTag_EnumDescriptor(void);

BOOL CfProjectTag_IsValidValue(int32_t value);

#pragma mark - Enum CfProjectStatus

// 众筹项目状态
typedef GPB_ENUM(CfProjectStatus) {
  CfProjectStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CfProjectStatus_InvalidCfps = 0,

  // 审核中
  CfProjectStatus_AuditingCfps = 1,

  // 已发布
  CfProjectStatus_PublishedCfps = 2,

  // 已筹满(主要目标)
  CfProjectStatus_FinishCfps = 3,

  // 失败
  CfProjectStatus_FailureCfps = 4,

  // 已完成
  CfProjectStatus_CompletedCfps = 5,
};

GPBEnumDescriptor *CfProjectStatus_EnumDescriptor(void);

BOOL CfProjectStatus_IsValidValue(int32_t value);

#pragma mark - Enum CfProjectSupportType

// 支持方式
typedef GPB_ENUM(CfProjectSupportType) {
  CfProjectSupportType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CfProjectSupportType_InvalidCfpst = 0,

  // 钱
  CfProjectSupportType_MoneyCfpst = 1,

  // 人
  CfProjectSupportType_PeopleCfpst = 2,

  // 物
  CfProjectSupportType_GoodsCfpst = 3,

  // 股权众筹 校园合伙人项目类专用
  CfProjectSupportType_EquityCfpst = 4,
};

GPBEnumDescriptor *CfProjectSupportType_EnumDescriptor(void);

BOOL CfProjectSupportType_IsValidValue(int32_t value);

#pragma mark - Enum CfUserCertificationType

// 认证类型
typedef GPB_ENUM(CfUserCertificationType) {
  CfUserCertificationType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CfUserCertificationType_InvalidCfuct = 0,
  CfUserCertificationType_StudentCfuct = 1,
  CfUserCertificationType_AgencyCfuct = 2,
};

GPBEnumDescriptor *CfUserCertificationType_EnumDescriptor(void);

BOOL CfUserCertificationType_IsValidValue(int32_t value);

#pragma mark - Enum CfUserCeritificationStatus

// 认证状态
typedef GPB_ENUM(CfUserCeritificationStatus) {
  CfUserCeritificationStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CfUserCeritificationStatus_InvalidCfucs = 0,

  // 申请中
  CfUserCeritificationStatus_ApplyingCfucs = 1,

  // 成功
  CfUserCeritificationStatus_SuccessCfucs = 2,

  // 失败
  CfUserCeritificationStatus_FailureCfucs = 3,
};

GPBEnumDescriptor *CfUserCeritificationStatus_EnumDescriptor(void);

BOOL CfUserCeritificationStatus_IsValidValue(int32_t value);

#pragma mark - Enum CfProjectInvestStatus

// 项目投资状态
typedef GPB_ENUM(CfProjectInvestStatus) {
  CfProjectInvestStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CfProjectInvestStatus_InvalidCfpis = 0,

  // 等待
  CfProjectInvestStatus_PendingCfpis = 1,

  // 已支付
  CfProjectInvestStatus_PaidCfpis = 2,

  // 成功
  CfProjectInvestStatus_SuccessCfpis = 3,

  // 过期
  CfProjectInvestStatus_ExpiredCfpis = 4,
};

GPBEnumDescriptor *CfProjectInvestStatus_EnumDescriptor(void);

BOOL CfProjectInvestStatus_IsValidValue(int32_t value);

#pragma mark - Enum CFCBHistoryType

// 筹币消费类型
typedef GPB_ENUM(CFCBHistoryType) {
  CFCBHistoryType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CFCBHistoryType_InvaildCb = 0,

  // 兑换
  CFCBHistoryType_ExchangeCb = 1,

  // 消费
  CFCBHistoryType_ConsumeCb = 2,

  // 提现
  CFCBHistoryType_WithdrawCb = 3,

  // 退还
  CFCBHistoryType_TurnbackCb = 4,

  // 平台赠送
  CFCBHistoryType_GiveCb = 5,

  // 项目筹集
  CFCBHistoryType_ChouCb = 6,
};

GPBEnumDescriptor *CFCBHistoryType_EnumDescriptor(void);

BOOL CFCBHistoryType_IsValidValue(int32_t value);

#pragma mark - Enum CfUserRole

typedef GPB_ENUM(CfUserRole) {
  CfUserRole_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CfUserRole_InvalidCfur = 0,
  CfUserRole_UserCfur = 1,
  CfUserRole_AdminCfur = 2,
};

GPBEnumDescriptor *CfUserRole_EnumDescriptor(void);

BOOL CfUserRole_IsValidValue(int32_t value);

#pragma mark - Enum CfMessageType

// 消息类型
typedef GPB_ENUM(CfMessageType) {
  CfMessageType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CfMessageType_InvalidCfmt = 0,

  // 系统消息
  CfMessageType_SysCfmt = 1,

  // 项目消息
  CfMessageType_ProjectCfmt = 2,

  // 项目评论消息
  CfMessageType_CommentCfmt = 3,
};

GPBEnumDescriptor *CfMessageType_EnumDescriptor(void);

BOOL CfMessageType_IsValidValue(int32_t value);

#pragma mark - OutsouringCrowdfundingRoot

@interface OutsouringCrowdfundingRoot : GPBRootObject

// The base class provides:
//   + (GPBExtensionRegistry *)extensionRegistry;
// which is an GPBExtensionRegistry that includes all the extensions defined by
// this file and all files that it depends on.

@end

#pragma mark - GetCFUserResp

typedef GPB_ENUM(GetCFUserResp_FieldNumber) {
  GetCFUserResp_FieldNumber_Resp = 1,
  GetCFUserResp_FieldNumber_CfUser = 2,
};

@interface GetCFUserResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

@property(nonatomic, readwrite) BOOL hasCfUser;
@property(nonatomic, readwrite, strong, null_resettable) CfUser *cfUser;

@end

#pragma mark - PassCfProjectInvestParam

typedef GPB_ENUM(PassCfProjectInvestParam_FieldNumber) {
  PassCfProjectInvestParam_FieldNumber_Token = 1,
  PassCfProjectInvestParam_FieldNumber_InvestId = 2,
};

@interface PassCfProjectInvestParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) int64_t investId;

@end

#pragma mark - RejectCfProjectInvestParam

typedef GPB_ENUM(RejectCfProjectInvestParam_FieldNumber) {
  RejectCfProjectInvestParam_FieldNumber_Token = 1,
  RejectCfProjectInvestParam_FieldNumber_InvestId = 2,
};

@interface RejectCfProjectInvestParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) int64_t investId;

@end

#pragma mark - CfUserHistoriesParam

typedef GPB_ENUM(CfUserHistoriesParam_FieldNumber) {
  CfUserHistoriesParam_FieldNumber_Token = 1,
  CfUserHistoriesParam_FieldNumber_Type = 2,
  CfUserHistoriesParam_FieldNumber_StartTime = 3,
  CfUserHistoriesParam_FieldNumber_EndTime = 4,
};

@interface CfUserHistoriesParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) CFCBHistoryType type;

@property(nonatomic, readwrite) int64_t startTime;

@property(nonatomic, readwrite) int64_t endTime;

@end

int32_t CfUserHistoriesParam_Type_RawValue(CfUserHistoriesParam *message);
void SetCfUserHistoriesParam_Type_RawValue(CfUserHistoriesParam *message, int32_t value);

#pragma mark - CfUserHistoriesResp

typedef GPB_ENUM(CfUserHistoriesResp_FieldNumber) {
  CfUserHistoriesResp_FieldNumber_Resp = 1,
  CfUserHistoriesResp_FieldNumber_HistoriesArray = 2,
};

@interface CfUserHistoriesResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// |historiesArray| contains |CFCBHistory|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *historiesArray;
@property(nonatomic, readonly) NSUInteger historiesArray_Count;

@end

#pragma mark - CfUserWithdrawParam

typedef GPB_ENUM(CfUserWithdrawParam_FieldNumber) {
  CfUserWithdrawParam_FieldNumber_Token = 1,
  CfUserWithdrawParam_FieldNumber_Coin = 2,
  CfUserWithdrawParam_FieldNumber_ThirdPartyWalletId = 3,
};

@interface CfUserWithdrawParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) uint64_t coin;

// 提现到绑定的哪一个第三方账户上
@property(nonatomic, readwrite) int64_t thirdPartyWalletId;

@end

#pragma mark - CfUserWithdrawResp

typedef GPB_ENUM(CfUserWithdrawResp_FieldNumber) {
  CfUserWithdrawResp_FieldNumber_Resp = 1,
  CfUserWithdrawResp_FieldNumber_History = 2,
};

@interface CfUserWithdrawResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

@property(nonatomic, readwrite) BOOL hasHistory;
@property(nonatomic, readwrite, strong, null_resettable) CFCBHistory *history;

@end

#pragma mark - CfUserCBExchangeParam

typedef GPB_ENUM(CfUserCBExchangeParam_FieldNumber) {
  CfUserCBExchangeParam_FieldNumber_Token = 1,
  CfUserCBExchangeParam_FieldNumber_Rmb = 2,
  CfUserCBExchangeParam_FieldNumber_Password = 3,
};

@interface CfUserCBExchangeParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

// 兑换多少钱,单位分
@property(nonatomic, readwrite) uint64_t rmb;

// 用户密码, 当做支付密码
@property(nonatomic, readwrite, copy, null_resettable) NSString *password;

@end

#pragma mark - CfUserCBExchangeResp

typedef GPB_ENUM(CfUserCBExchangeResp_FieldNumber) {
  CfUserCBExchangeResp_FieldNumber_Resp = 1,
  CfUserCBExchangeResp_FieldNumber_History = 2,
};

@interface CfUserCBExchangeResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

@property(nonatomic, readwrite) BOOL hasHistory;
@property(nonatomic, readwrite, strong, null_resettable) CFCBHistory *history;

@end

#pragma mark - CfUserCBConsumeParam

typedef GPB_ENUM(CfUserCBConsumeParam_FieldNumber) {
  CfUserCBConsumeParam_FieldNumber_Token = 1,
  CfUserCBConsumeParam_FieldNumber_Coin = 2,
  CfUserCBConsumeParam_FieldNumber_OrderId = 3,
};

@interface CfUserCBConsumeParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) uint64_t coin;

@property(nonatomic, readwrite, copy, null_resettable) NSString *orderId;

@end

#pragma mark - CfUserCBConsumeResp

typedef GPB_ENUM(CfUserCBConsumeResp_FieldNumber) {
  CfUserCBConsumeResp_FieldNumber_Resp = 1,
  CfUserCBConsumeResp_FieldNumber_History = 2,
};

@interface CfUserCBConsumeResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

@property(nonatomic, readwrite) BOOL hasHistory;
@property(nonatomic, readwrite, strong, null_resettable) CFCBHistory *history;

@end

#pragma mark - UpdateCFUserParam

typedef GPB_ENUM(UpdateCFUserParam_FieldNumber) {
  UpdateCFUserParam_FieldNumber_Token = 1,
  UpdateCFUserParam_FieldNumber_CfUser = 2,
};

@interface UpdateCFUserParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) BOOL hasCfUser;
@property(nonatomic, readwrite, strong, null_resettable) CfUser *cfUser;

@end

#pragma mark - UpdateCFUserResp

typedef GPB_ENUM(UpdateCFUserResp_FieldNumber) {
  UpdateCFUserResp_FieldNumber_Resp = 1,
  UpdateCFUserResp_FieldNumber_CfUser = 2,
};

@interface UpdateCFUserResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

@property(nonatomic, readwrite) BOOL hasCfUser;
@property(nonatomic, readwrite, strong, null_resettable) CfUser *cfUser;

@end

#pragma mark - AuditCfProjectParam

typedef GPB_ENUM(AuditCfProjectParam_FieldNumber) {
  AuditCfProjectParam_FieldNumber_Token = 1,
  AuditCfProjectParam_FieldNumber_ProjectId = 2,
  AuditCfProjectParam_FieldNumber_Status = 3,
};

@interface AuditCfProjectParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) int64_t projectId;

@property(nonatomic, readwrite) CfProjectStatus status;

@end

int32_t AuditCfProjectParam_Status_RawValue(AuditCfProjectParam *message);
void SetAuditCfProjectParam_Status_RawValue(AuditCfProjectParam *message, int32_t value);

#pragma mark - UpdateCfProjectParam

typedef GPB_ENUM(UpdateCfProjectParam_FieldNumber) {
  UpdateCfProjectParam_FieldNumber_Token = 1,
  UpdateCfProjectParam_FieldNumber_Project = 2,
};

@interface UpdateCfProjectParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) BOOL hasProject;
@property(nonatomic, readwrite, strong, null_resettable) CfProject *project;

@end

#pragma mark - UpdateCfProjectResp

typedef GPB_ENUM(UpdateCfProjectResp_FieldNumber) {
  UpdateCfProjectResp_FieldNumber_Resp = 1,
  UpdateCfProjectResp_FieldNumber_Project = 2,
};

@interface UpdateCfProjectResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

@property(nonatomic, readwrite) BOOL hasProject;
@property(nonatomic, readwrite, strong, null_resettable) CfProject *project;

@end

#pragma mark - FindCfUsersParam

typedef GPB_ENUM(FindCfUsersParam_FieldNumber) {
  FindCfUsersParam_FieldNumber_Token = 1,
  FindCfUsersParam_FieldNumber_Role = 2,
};

@interface FindCfUsersParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) CfUserRole role;

@end

int32_t FindCfUsersParam_Role_RawValue(FindCfUsersParam *message);
void SetFindCfUsersParam_Role_RawValue(FindCfUsersParam *message, int32_t value);

#pragma mark - FindCfUsersResp

typedef GPB_ENUM(FindCfUsersResp_FieldNumber) {
  FindCfUsersResp_FieldNumber_Resp = 1,
  FindCfUsersResp_FieldNumber_UsersArray = 2,
};

@interface FindCfUsersResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// |usersArray| contains |CfUser|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *usersArray;
@property(nonatomic, readonly) NSUInteger usersArray_Count;

@end

#pragma mark - PassCfUserCertApplyParam

typedef GPB_ENUM(PassCfUserCertApplyParam_FieldNumber) {
  PassCfUserCertApplyParam_FieldNumber_Token = 1,
  PassCfUserCertApplyParam_FieldNumber_ApplyId = 2,
};

@interface PassCfUserCertApplyParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) int64_t applyId;

@end

#pragma mark - RejectCfUserCertApplyParam

typedef GPB_ENUM(RejectCfUserCertApplyParam_FieldNumber) {
  RejectCfUserCertApplyParam_FieldNumber_Token = 1,
  RejectCfUserCertApplyParam_FieldNumber_ApplyId = 2,
  RejectCfUserCertApplyParam_FieldNumber_Comment = 3,
};

@interface RejectCfUserCertApplyParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) int64_t applyId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *comment;

@end

#pragma mark - FindCfUserCertApplyListParam

typedef GPB_ENUM(FindCfUserCertApplyListParam_FieldNumber) {
  FindCfUserCertApplyListParam_FieldNumber_Token = 1,
  FindCfUserCertApplyListParam_FieldNumber_Status = 2,
  FindCfUserCertApplyListParam_FieldNumber_Type = 3,
};

@interface FindCfUserCertApplyListParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) CfUserCeritificationStatus status;

@property(nonatomic, readwrite) CfUserCertificationType type;

@end

int32_t FindCfUserCertApplyListParam_Status_RawValue(FindCfUserCertApplyListParam *message);
void SetFindCfUserCertApplyListParam_Status_RawValue(FindCfUserCertApplyListParam *message, int32_t value);

int32_t FindCfUserCertApplyListParam_Type_RawValue(FindCfUserCertApplyListParam *message);
void SetFindCfUserCertApplyListParam_Type_RawValue(FindCfUserCertApplyListParam *message, int32_t value);

#pragma mark - FindCfUserCertApplyListResp

typedef GPB_ENUM(FindCfUserCertApplyListResp_FieldNumber) {
  FindCfUserCertApplyListResp_FieldNumber_Resp = 1,
  FindCfUserCertApplyListResp_FieldNumber_CertsArray = 2,
};

@interface FindCfUserCertApplyListResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// |certsArray| contains |CfUserCertApply|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *certsArray;
@property(nonatomic, readonly) NSUInteger certsArray_Count;

@end

#pragma mark - GetRCCFUserTokenParam

typedef GPB_ENUM(GetRCCFUserTokenParam_FieldNumber) {
  GetRCCFUserTokenParam_FieldNumber_Token = 1,
};

@interface GetRCCFUserTokenParam : GPBMessage

// 用户登陆token
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@end

#pragma mark - GetRCCFUserTokenResp

typedef GPB_ENUM(GetRCCFUserTokenResp_FieldNumber) {
  GetRCCFUserTokenResp_FieldNumber_Resp = 1,
  GetRCCFUserTokenResp_FieldNumber_RcToken = 2,
};

@interface GetRCCFUserTokenResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// 融云token
@property(nonatomic, readwrite, copy, null_resettable) NSString *rcToken;

@end

#pragma mark - CloseCfProjectParam

typedef GPB_ENUM(CloseCfProjectParam_FieldNumber) {
  CloseCfProjectParam_FieldNumber_Token = 1,
  CloseCfProjectParam_FieldNumber_ProjectId = 2,
};

@interface CloseCfProjectParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

// 项目ID
@property(nonatomic, readwrite) int64_t projectId;

@end

#pragma mark - CloseCfProjectResp

typedef GPB_ENUM(CloseCfProjectResp_FieldNumber) {
  CloseCfProjectResp_FieldNumber_Resp = 1,
  CloseCfProjectResp_FieldNumber_Project = 2,
};

@interface CloseCfProjectResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// 关闭的项目
@property(nonatomic, readwrite) BOOL hasProject;
@property(nonatomic, readwrite, strong, null_resettable) CfProject *project;

@end

#pragma mark - GetCfProjectParam

typedef GPB_ENUM(GetCfProjectParam_FieldNumber) {
  GetCfProjectParam_FieldNumber_ProjectId = 1,
};

@interface GetCfProjectParam : GPBMessage

// 项目ID
@property(nonatomic, readwrite) int64_t projectId;

@end

#pragma mark - GetCfProjectResp

typedef GPB_ENUM(GetCfProjectResp_FieldNumber) {
  GetCfProjectResp_FieldNumber_Resp = 1,
  GetCfProjectResp_FieldNumber_Project = 2,
};

@interface GetCfProjectResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// 项目对象
@property(nonatomic, readwrite) BOOL hasProject;
@property(nonatomic, readwrite, strong, null_resettable) CfProject *project;

@end

#pragma mark - NewCfProjectInvestParam

typedef GPB_ENUM(NewCfProjectInvestParam_FieldNumber) {
  NewCfProjectInvestParam_FieldNumber_Token = 1,
  NewCfProjectInvestParam_FieldNumber_CfProjectId = 2,
  NewCfProjectInvestParam_FieldNumber_CfProjectRewardId = 3,
  NewCfProjectInvestParam_FieldNumber_Count = 4,
  NewCfProjectInvestParam_FieldNumber_Comment = 5,
  NewCfProjectInvestParam_FieldNumber_AddrId = 6,
};

@interface NewCfProjectInvestParam : GPBMessage

// 登陆token,必须
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

// 项目ID,必须
@property(nonatomic, readwrite) int64_t cfProjectId;

// 回报ID,必须
@property(nonatomic, readwrite) int64_t cfProjectRewardId;

// 购买份数
@property(nonatomic, readwrite) uint64_t count;

// 备注，可选
@property(nonatomic, readwrite, copy, null_resettable) NSString *comment;

// 收货地址，可选
@property(nonatomic, readwrite) int64_t addrId;

@end

#pragma mark - NewCfProjectInvestResp

typedef GPB_ENUM(NewCfProjectInvestResp_FieldNumber) {
  NewCfProjectInvestResp_FieldNumber_Resp = 1,
  NewCfProjectInvestResp_FieldNumber_Invest = 2,
};

@interface NewCfProjectInvestResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// 投资记录
@property(nonatomic, readwrite) BOOL hasInvest;
@property(nonatomic, readwrite, strong, null_resettable) CfProjectInvest *invest;

@end

#pragma mark - DelCfUserAddrParam

typedef GPB_ENUM(DelCfUserAddrParam_FieldNumber) {
  DelCfUserAddrParam_FieldNumber_Token = 1,
  DelCfUserAddrParam_FieldNumber_AddrId = 2,
};

// 删除收货地址参数
@interface DelCfUserAddrParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

// 地址ID
@property(nonatomic, readwrite) int64_t addrId;

@end

#pragma mark - UserUnCollectProjectParam

typedef GPB_ENUM(UserUnCollectProjectParam_FieldNumber) {
  UserUnCollectProjectParam_FieldNumber_Token = 1,
  UserUnCollectProjectParam_FieldNumber_ProjectId = 2,
};

@interface UserUnCollectProjectParam : GPBMessage

// 用户登陆token
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

// 项目id
@property(nonatomic, readwrite) int64_t projectId;

@end

#pragma mark - UserCollectProjectParam

typedef GPB_ENUM(UserCollectProjectParam_FieldNumber) {
  UserCollectProjectParam_FieldNumber_Token = 1,
  UserCollectProjectParam_FieldNumber_ProjectId = 2,
};

@interface UserCollectProjectParam : GPBMessage

// 用户登陆token
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

// 项目id
@property(nonatomic, readwrite) int64_t projectId;

@end

#pragma mark - UserCertApplyParam

typedef GPB_ENUM(UserCertApplyParam_FieldNumber) {
  UserCertApplyParam_FieldNumber_Token = 1,
  UserCertApplyParam_FieldNumber_Apply = 2,
};

@interface UserCertApplyParam : GPBMessage

// 当前用户登陆token
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

// 认证申请对象
@property(nonatomic, readwrite) BOOL hasApply;
@property(nonatomic, readwrite, strong, null_resettable) CfUserCertApply *apply;

@end

#pragma mark - UserCertApplyResp

typedef GPB_ENUM(UserCertApplyResp_FieldNumber) {
  UserCertApplyResp_FieldNumber_Resp = 1,
  UserCertApplyResp_FieldNumber_Apply = 2,
};

@interface UserCertApplyResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// 认证申请对象
@property(nonatomic, readwrite) BOOL hasApply;
@property(nonatomic, readwrite, strong, null_resettable) CfUserCertApply *apply;

@end

#pragma mark - RegisterCFAppUserResp

typedef GPB_ENUM(RegisterCFAppUserResp_FieldNumber) {
  RegisterCFAppUserResp_FieldNumber_Resp = 1,
  RegisterCFAppUserResp_FieldNumber_CfUser = 2,
};

@interface RegisterCFAppUserResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// 筹么用户
@property(nonatomic, readwrite) BOOL hasCfUser;
@property(nonatomic, readwrite, strong, null_resettable) CfUser *cfUser;

@end

#pragma mark - LoginCFAppResp

typedef GPB_ENUM(LoginCFAppResp_FieldNumber) {
  LoginCFAppResp_FieldNumber_Resp = 1,
  LoginCFAppResp_FieldNumber_CfUser = 2,
  LoginCFAppResp_FieldNumber_Token = 3,
};

@interface LoginCFAppResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// 筹么用户
@property(nonatomic, readwrite) BOOL hasCfUser;
@property(nonatomic, readwrite, strong, null_resettable) CfUser *cfUser;

// 系统登陆token，保存到客户端，在请求私密数据时需要
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@end

#pragma mark - RaiseCfProjectParam

typedef GPB_ENUM(RaiseCfProjectParam_FieldNumber) {
  RaiseCfProjectParam_FieldNumber_Token = 1,
  RaiseCfProjectParam_FieldNumber_Project = 2,
};

@interface RaiseCfProjectParam : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

// 项目对象
@property(nonatomic, readwrite) BOOL hasProject;
@property(nonatomic, readwrite, strong, null_resettable) CfProject *project;

@end

#pragma mark - RaiseCfProjectResp

typedef GPB_ENUM(RaiseCfProjectResp_FieldNumber) {
  RaiseCfProjectResp_FieldNumber_Resp = 1,
  RaiseCfProjectResp_FieldNumber_Project = 2,
};

@interface RaiseCfProjectResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// 项目对象
@property(nonatomic, readwrite) BOOL hasProject;
@property(nonatomic, readwrite, strong, null_resettable) CfProject *project;

@end

#pragma mark - FindCfProjectsParam

typedef GPB_ENUM(FindCfProjectsParam_FieldNumber) {
  FindCfProjectsParam_FieldNumber_Category = 1,
  FindCfProjectsParam_FieldNumber_Status = 2,
  FindCfProjectsParam_FieldNumber_Tag = 3,
  FindCfProjectsParam_FieldNumber_Page = 4,
  FindCfProjectsParam_FieldNumber_Size = 5,
};

@interface FindCfProjectsParam : GPBMessage

// 项目分类
@property(nonatomic, readwrite) CrowdFundingCategory category;

// 项目状态
@property(nonatomic, readwrite) CfProjectStatus status;

// 项目聚合标签
@property(nonatomic, readwrite) CfProjectTag tag;

// 第几页
@property(nonatomic, readwrite) int64_t page;

// 每页个数
@property(nonatomic, readwrite) int64_t size;

@end

int32_t FindCfProjectsParam_Category_RawValue(FindCfProjectsParam *message);
void SetFindCfProjectsParam_Category_RawValue(FindCfProjectsParam *message, int32_t value);

int32_t FindCfProjectsParam_Status_RawValue(FindCfProjectsParam *message);
void SetFindCfProjectsParam_Status_RawValue(FindCfProjectsParam *message, int32_t value);

int32_t FindCfProjectsParam_Tag_RawValue(FindCfProjectsParam *message);
void SetFindCfProjectsParam_Tag_RawValue(FindCfProjectsParam *message, int32_t value);

#pragma mark - FindCfProjectsResp

typedef GPB_ENUM(FindCfProjectsResp_FieldNumber) {
  FindCfProjectsResp_FieldNumber_Resp = 1,
  FindCfProjectsResp_FieldNumber_ProjectsArray = 2,
};

@interface FindCfProjectsResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// 项目列表
// |projectsArray| contains |CfProject|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *projectsArray;
@property(nonatomic, readonly) NSUInteger projectsArray_Count;

@end

#pragma mark - CfUserCertApply

typedef GPB_ENUM(CfUserCertApply_FieldNumber) {
  CfUserCertApply_FieldNumber_Id_p = 1,
  CfUserCertApply_FieldNumber_Type = 2,
  CfUserCertApply_FieldNumber_CfUserId = 3,
  CfUserCertApply_FieldNumber_ApplyTime = 4,
  CfUserCertApply_FieldNumber_Status = 5,
  CfUserCertApply_FieldNumber_Auditor = 6,
  CfUserCertApply_FieldNumber_Comment = 7,
  CfUserCertApply_FieldNumber_AuditTime = 8,
  CfUserCertApply_FieldNumber_Name = 10,
  CfUserCertApply_FieldNumber_School = 11,
  CfUserCertApply_FieldNumber_PicsArray = 12,
  CfUserCertApply_FieldNumber_HongId = 13,
};

// 认证申请
@interface CfUserCertApply : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 认证类型
@property(nonatomic, readwrite) CfUserCertificationType type;

// 用户id
@property(nonatomic, readwrite) int64_t cfUserId;

// 申请时间
@property(nonatomic, readwrite) int64_t applyTime;

// 认证状态
@property(nonatomic, readwrite) CfUserCeritificationStatus status;

// 审核人
@property(nonatomic, readwrite) uint64_t auditor;

// 备注
@property(nonatomic, readwrite, copy, null_resettable) NSString *comment;

// 审核时间
@property(nonatomic, readwrite) int64_t auditTime;

// 认证名
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

// 所属学校
@property(nonatomic, readwrite, copy, null_resettable) NSString *school;

// 材料
// |picsArray| contains |CfUserCertPic|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *picsArray;
@property(nonatomic, readonly) NSUInteger picsArray_Count;

@property(nonatomic, readwrite) uint64_t hongId;

@end

int32_t CfUserCertApply_Type_RawValue(CfUserCertApply *message);
void SetCfUserCertApply_Type_RawValue(CfUserCertApply *message, int32_t value);

int32_t CfUserCertApply_Status_RawValue(CfUserCertApply *message);
void SetCfUserCertApply_Status_RawValue(CfUserCertApply *message, int32_t value);

#pragma mark - CfUserCertPic

typedef GPB_ENUM(CfUserCertPic_FieldNumber) {
  CfUserCertPic_FieldNumber_Id_p = 1,
  CfUserCertPic_FieldNumber_CfUserCertApplyId = 2,
  CfUserCertPic_FieldNumber_URL = 3,
};

// 认证申请材料
@interface CfUserCertPic : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite) int64_t cfUserCertApplyId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uRL;

@end

#pragma mark - CfProjectInvest

typedef GPB_ENUM(CfProjectInvest_FieldNumber) {
  CfProjectInvest_FieldNumber_Id_p = 1,
  CfProjectInvest_FieldNumber_CfProjectId = 2,
  CfProjectInvest_FieldNumber_CfProjectRewardId = 3,
  CfProjectInvest_FieldNumber_Count = 4,
  CfProjectInvest_FieldNumber_InvestTime = 5,
  CfProjectInvest_FieldNumber_HongId = 6,
  CfProjectInvest_FieldNumber_Comment = 7,
  CfProjectInvest_FieldNumber_AddrId = 8,
  CfProjectInvest_FieldNumber_ExpiredTime = 9,
  CfProjectInvest_FieldNumber_Status = 10,
  CfProjectInvest_FieldNumber_OrderId = 11,
  CfProjectInvest_FieldNumber_CoinPay = 12,
  CfProjectInvest_FieldNumber_RewardName = 13,
  CfProjectInvest_FieldNumber_ProjectName = 14,
  CfProjectInvest_FieldNumber_CfUserId = 15,
  CfProjectInvest_FieldNumber_ProjectPic = 16,
  CfProjectInvest_FieldNumber_RewardCount = 17,
  CfProjectInvest_FieldNumber_RewardAmount = 18,
  CfProjectInvest_FieldNumber_RewardSupportType = 19,
  CfProjectInvest_FieldNumber_InvestorAvatar = 20,
  CfProjectInvest_FieldNumber_InvestorNick = 21,
};

// 众筹项目投资记录
@interface CfProjectInvest : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 项目id
@property(nonatomic, readwrite) int64_t cfProjectId;

// 回报方式ID
@property(nonatomic, readwrite) int64_t cfProjectRewardId;

// 投资份数
@property(nonatomic, readwrite) uint64_t count;

// 投资时间
@property(nonatomic, readwrite) int64_t investTime;

// 用户
@property(nonatomic, readwrite) uint64_t hongId;

// 备注
@property(nonatomic, readwrite, copy, null_resettable) NSString *comment;

// 地址id
@property(nonatomic, readwrite) int64_t addrId;

// 过期时间
@property(nonatomic, readwrite) int64_t expiredTime;

// 投资状态
@property(nonatomic, readwrite) CfProjectInvestStatus status;

// 订单
@property(nonatomic, readwrite, copy, null_resettable) NSString *orderId;

// // 应该支付的筹币数
@property(nonatomic, readwrite) uint64_t coinPay;

// 回报方式
@property(nonatomic, readwrite, copy, null_resettable) NSString *rewardName;

// 项目
@property(nonatomic, readwrite, copy, null_resettable) NSString *projectName;

// 投资者内部id,关联用,客户端不管
@property(nonatomic, readwrite) int64_t cfUserId;

// 项目头一张图
@property(nonatomic, readwrite, copy, null_resettable) NSString *projectPic;

// 支持份数
@property(nonatomic, readwrite) uint64_t rewardCount;

// 每份的量
@property(nonatomic, readwrite) uint64_t rewardAmount;

// 回报方式类型
@property(nonatomic, readwrite) CfProjectSupportType rewardSupportType;

// 投资者头像
@property(nonatomic, readwrite, copy, null_resettable) NSString *investorAvatar;

// 投资者昵称
@property(nonatomic, readwrite, copy, null_resettable) NSString *investorNick;

@end

int32_t CfProjectInvest_Status_RawValue(CfProjectInvest *message);
void SetCfProjectInvest_Status_RawValue(CfProjectInvest *message, int32_t value);

int32_t CfProjectInvest_RewardSupportType_RawValue(CfProjectInvest *message);
void SetCfProjectInvest_RewardSupportType_RawValue(CfProjectInvest *message, int32_t value);

#pragma mark - CFCBHistory

typedef GPB_ENUM(CFCBHistory_FieldNumber) {
  CFCBHistory_FieldNumber_Id_p = 1,
  CFCBHistory_FieldNumber_Type = 2,
  CFCBHistory_FieldNumber_Coin = 3,
  CFCBHistory_FieldNumber_Remain = 4,
  CFCBHistory_FieldNumber_Time = 5,
  CFCBHistory_FieldNumber_OrderId = 6,
  CFCBHistory_FieldNumber_HongId = 7,
  CFCBHistory_FieldNumber_Finished = 8,
};

// 筹币消费记录
@interface CFCBHistory : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite) CFCBHistoryType type;

@property(nonatomic, readwrite) uint64_t coin;

@property(nonatomic, readwrite) uint64_t remain;

@property(nonatomic, readwrite) int64_t time;

@property(nonatomic, readwrite, copy, null_resettable) NSString *orderId;

@property(nonatomic, readwrite) uint64_t hongId;

@property(nonatomic, readwrite) BOOL finished;

@end

int32_t CFCBHistory_Type_RawValue(CFCBHistory *message);
void SetCFCBHistory_Type_RawValue(CFCBHistory *message, int32_t value);

#pragma mark - CfProjectReward

typedef GPB_ENUM(CfProjectReward_FieldNumber) {
  CfProjectReward_FieldNumber_Id_p = 1,
  CfProjectReward_FieldNumber_Desc = 2,
  CfProjectReward_FieldNumber_SupportType = 3,
  CfProjectReward_FieldNumber_Amount = 4,
  CfProjectReward_FieldNumber_LimitedCount = 5,
  CfProjectReward_FieldNumber_CfProjectId = 6,
  CfProjectReward_FieldNumber_AlreadyCount = 7,
  CfProjectReward_FieldNumber_AdditionalCoin = 8,
  CfProjectReward_FieldNumber_Del = 9,
  CfProjectReward_FieldNumber_NeedAddr = 10,
  CfProjectReward_FieldNumber_NeedPhone = 11,
};

// 回报方式
@interface CfProjectReward : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 回报描述(255字符)
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

// 支持方式
@property(nonatomic, readwrite) CfProjectSupportType supportType;

// 支持数量(人/钱/物/股权), 股权支持为千分之n
@property(nonatomic, readwrite) uint64_t amount;

// 限制份数
@property(nonatomic, readwrite) uint64_t limitedCount;

// 项目id
@property(nonatomic, readwrite) int64_t cfProjectId;

// 已经投资的份数
@property(nonatomic, readwrite) uint64_t alreadyCount;

// 附加筹币
@property(nonatomic, readwrite) uint64_t additionalCoin;

// 是否已被删除
@property(nonatomic, readwrite) BOOL del;

// 是否需要收货地址
@property(nonatomic, readwrite) BOOL needAddr;

// 是否需要联系方式
@property(nonatomic, readwrite) BOOL needPhone;

@end

int32_t CfProjectReward_SupportType_RawValue(CfProjectReward *message);
void SetCfProjectReward_SupportType_RawValue(CfProjectReward *message, int32_t value);

#pragma mark - UsersCollectProjects

typedef GPB_ENUM(UsersCollectProjects_FieldNumber) {
  UsersCollectProjects_FieldNumber_Id_p = 1,
  UsersCollectProjects_FieldNumber_CfProjectId = 2,
  UsersCollectProjects_FieldNumber_CfUserId = 3,
};

// 用户与项目的收藏关系 many to many
@interface UsersCollectProjects : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 项目id
@property(nonatomic, readwrite) int64_t cfProjectId;

// 用户id
@property(nonatomic, readwrite) int64_t cfUserId;

@end

#pragma mark - CfProject

typedef GPB_ENUM(CfProject_FieldNumber) {
  CfProject_FieldNumber_Id_p = 1,
  CfProject_FieldNumber_Title = 2,
  CfProject_FieldNumber_Desc = 3,
  CfProject_FieldNumber_Contact = 4,
  CfProject_FieldNumber_Tel = 5,
  CfProject_FieldNumber_CfUserId = 6,
  CfProject_FieldNumber_FundTime = 7,
  CfProject_FieldNumber_PicsArray = 8,
  CfProject_FieldNumber_RequiredMoneyAmount = 9,
  CfProject_FieldNumber_RequiredGoodsAmount = 10,
  CfProject_FieldNumber_RequiredPeopleAmount = 11,
  CfProject_FieldNumber_RequiredGoodsName = 12,
  CfProject_FieldNumber_Deadline = 13,
  CfProject_FieldNumber_Category = 14,
  CfProject_FieldNumber_RewardsArray = 15,
  CfProject_FieldNumber_Status = 16,
  CfProject_FieldNumber_CollectedUsersArray = 17,
  CfProject_FieldNumber_InvestsArray = 18,
  CfProject_FieldNumber_Tag = 19,
  CfProject_FieldNumber_HongId = 20,
  CfProject_FieldNumber_AuditTime = 21,
  CfProject_FieldNumber_Auditer = 22,
  CfProject_FieldNumber_AlreadyMoneyAmount = 23,
  CfProject_FieldNumber_AlreadyGoodsAmount = 24,
  CfProject_FieldNumber_AlreadyPeopleAmount = 25,
  CfProject_FieldNumber_MajarType = 26,
  CfProject_FieldNumber_School = 27,
  CfProject_FieldNumber_RequiredProjectAmount = 28,
  CfProject_FieldNumber_RequiredProjectEquity = 29,
  CfProject_FieldNumber_AlreadyProjectEquity = 30,
  CfProject_FieldNumber_AdditionalCoin = 31,
  CfProject_FieldNumber_SecondProductEquity = 32,
  CfProject_FieldNumber_ParentProjectId = 33,
  CfProject_FieldNumber_ProfitRate = 34,
  CfProject_FieldNumber_Intro = 35,
};

// 众筹项目
@interface CfProject : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 标题
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

// 描述（255字符）
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

// 联系人
@property(nonatomic, readwrite, copy, null_resettable) NSString *contact;

// 联系方式
@property(nonatomic, readwrite, copy, null_resettable) NSString *tel;

// 发起者
@property(nonatomic, readwrite) int64_t cfUserId;

// 发起时间
@property(nonatomic, readwrite) int64_t fundTime;

// 图片列表
// |picsArray| contains |CfProjectPic|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *picsArray;
@property(nonatomic, readonly) NSUInteger picsArray_Count;

// 想筹集的钱(筹币)
@property(nonatomic, readwrite) uint64_t requiredMoneyAmount;

// 想筹集的物品数量
@property(nonatomic, readwrite) uint64_t requiredGoodsAmount;

// 想筹集的人数
@property(nonatomic, readwrite) uint64_t requiredPeopleAmount;

// 募集的物品名称
@property(nonatomic, readwrite, copy, null_resettable) NSString *requiredGoodsName;

// 截止日期
@property(nonatomic, readwrite) int64_t deadline;

// 众筹类别
@property(nonatomic, readwrite) CrowdFundingCategory category;

// 回报方式列表
// |rewardsArray| contains |CfProjectReward|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *rewardsArray;
@property(nonatomic, readonly) NSUInteger rewardsArray_Count;

@property(nonatomic, readwrite) CfProjectStatus status;

// 收藏的用户
// |collectedUsersArray| contains |CfUser|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *collectedUsersArray;
@property(nonatomic, readonly) NSUInteger collectedUsersArray_Count;

// 投资记录
// |investsArray| contains |CfProjectInvest|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *investsArray;
@property(nonatomic, readonly) NSUInteger investsArray_Count;

// 聚合标签
@property(nonatomic, readwrite) CfProjectTag tag;

// 发起者hongid
@property(nonatomic, readwrite) uint64_t hongId;

@property(nonatomic, readwrite) int64_t auditTime;

@property(nonatomic, readwrite) uint64_t auditer;

// 已筹的钱(筹币)
@property(nonatomic, readwrite) uint64_t alreadyMoneyAmount;

// 已筹的物品数
@property(nonatomic, readwrite) uint64_t alreadyGoodsAmount;

// 已筹的人数
@property(nonatomic, readwrite) uint64_t alreadyPeopleAmount;

// 主要目标类型
@property(nonatomic, readwrite) CfProjectSupportType majarType;

// 学校code
@property(nonatomic, readwrite, copy, null_resettable) NSString *school;

// 校园合伙人-项目-融资额
@property(nonatomic, readwrite) uint64_t requiredProjectAmount;

// 校园合伙人-项目-出让股份千分之n
@property(nonatomic, readwrite) uint64_t requiredProjectEquity;

// 校园合伙人-项目-已筹集的股份
@property(nonatomic, readwrite) uint64_t alreadyProjectEquity;

// 附加费统计
@property(nonatomic, readwrite) uint64_t additionalCoin;

// 校园合伙人-产品-二次收益分配股权
@property(nonatomic, readwrite) uint64_t secondProductEquity;

// 从哪个项目派生
@property(nonatomic, readwrite) int64_t parentProjectId;

// 利润率  千分之n
@property(nonatomic, readwrite) uint64_t profitRate;

// 介绍
@property(nonatomic, readwrite, copy, null_resettable) NSString *intro;

@end

int32_t CfProject_Category_RawValue(CfProject *message);
void SetCfProject_Category_RawValue(CfProject *message, int32_t value);

int32_t CfProject_Status_RawValue(CfProject *message);
void SetCfProject_Status_RawValue(CfProject *message, int32_t value);

int32_t CfProject_Tag_RawValue(CfProject *message);
void SetCfProject_Tag_RawValue(CfProject *message, int32_t value);

int32_t CfProject_MajarType_RawValue(CfProject *message);
void SetCfProject_MajarType_RawValue(CfProject *message, int32_t value);

#pragma mark - CfProjectPic

typedef GPB_ENUM(CfProjectPic_FieldNumber) {
  CfProjectPic_FieldNumber_Id_p = 1,
  CfProjectPic_FieldNumber_CfProjectId = 2,
  CfProjectPic_FieldNumber_URL = 3,
  CfProjectPic_FieldNumber_Del = 4,
};

// 众筹项目图片
@interface CfProjectPic : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite) int64_t cfProjectId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *uRL;

// 是否已被删除
@property(nonatomic, readwrite) BOOL del;

@end

#pragma mark - CfUser

typedef GPB_ENUM(CfUser_FieldNumber) {
  CfUser_FieldNumber_Id_p = 1,
  CfUser_FieldNumber_HongId = 2,
  CfUser_FieldNumber_FundProjectsArray = 3,
  CfUser_FieldNumber_Certification = 4,
  CfUser_FieldNumber_CollectedProjectsArray = 5,
  CfUser_FieldNumber_InvestProjectsArray = 6,
  CfUser_FieldNumber_Point = 7,
  CfUser_FieldNumber_Coin = 8,
  CfUser_FieldNumber_RcToken = 9,
  CfUser_FieldNumber_Role = 10,
  CfUser_FieldNumber_User = 11,
};

// 众筹用户
@interface CfUser : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

@property(nonatomic, readwrite) uint64_t hongId;

// 我的发起
// |fundProjectsArray| contains |CfProject|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *fundProjectsArray;
@property(nonatomic, readonly) NSUInteger fundProjectsArray_Count;

// 我的认证
@property(nonatomic, readwrite) BOOL hasCertification;
@property(nonatomic, readwrite, strong, null_resettable) CfUserCertApply *certification;

// 我的收藏
// |collectedProjectsArray| contains |CfProject|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *collectedProjectsArray;
@property(nonatomic, readonly) NSUInteger collectedProjectsArray_Count;

// 我的参与
// |investProjectsArray| contains |CfProjectInvest|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *investProjectsArray;
@property(nonatomic, readonly) NSUInteger investProjectsArray_Count;

// 积分
@property(nonatomic, readwrite) uint64_t point;

// 筹币
@property(nonatomic, readwrite) uint64_t coin;

// 融云token
@property(nonatomic, readwrite, copy, null_resettable) NSString *rcToken;

// 权限
@property(nonatomic, readwrite) CfUserRole role;

@property(nonatomic, readwrite) BOOL hasUser;
@property(nonatomic, readwrite, strong, null_resettable) User *user;

@end

int32_t CfUser_Role_RawValue(CfUser *message);
void SetCfUser_Role_RawValue(CfUser *message, int32_t value);

#pragma mark - CfMessage

typedef GPB_ENUM(CfMessage_FieldNumber) {
  CfMessage_FieldNumber_Title = 1,
  CfMessage_FieldNumber_Time = 2,
  CfMessage_FieldNumber_Type = 3,
  CfMessage_FieldNumber_Content = 4,
  CfMessage_FieldNumber_Project = 5,
  CfMessage_FieldNumber_Comment = 6,
};

// 众筹系统消息
@interface CfMessage : GPBMessage

// 消息头
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

// 时间
@property(nonatomic, readwrite) int64_t time;

// 消息类型
@property(nonatomic, readwrite) CfMessageType type;

// 消息内容
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

// 项目消息此处有值
@property(nonatomic, readwrite) BOOL hasProject;
@property(nonatomic, readwrite, strong, null_resettable) CfProject *project;

// 评论消息此处有值
@property(nonatomic, readwrite) BOOL hasComment;
@property(nonatomic, readwrite, strong, null_resettable) CfProjectComment *comment;

@end

int32_t CfMessage_Type_RawValue(CfMessage *message);
void SetCfMessage_Type_RawValue(CfMessage *message, int32_t value);

#pragma mark - CfProjectComment

typedef GPB_ENUM(CfProjectComment_FieldNumber) {
  CfProjectComment_FieldNumber_Id_p = 1,
  CfProjectComment_FieldNumber_ProjectId = 2,
  CfProjectComment_FieldNumber_Avatar = 3,
  CfProjectComment_FieldNumber_UserId = 4,
  CfProjectComment_FieldNumber_UserNick = 5,
  CfProjectComment_FieldNumber_RepliedUserId = 6,
  CfProjectComment_FieldNumber_RepliedUserNick = 7,
  CfProjectComment_FieldNumber_Content = 8,
  CfProjectComment_FieldNumber_Time = 9,
};

// 项目评论
@interface CfProjectComment : GPBMessage

@property(nonatomic, readwrite) int64_t id_p;

// 项目id
@property(nonatomic, readwrite) int64_t projectId;

// 评论人头像
@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

// 评论人hongid
@property(nonatomic, readwrite) uint64_t userId;

// 评论人nick
@property(nonatomic, readwrite, copy, null_resettable) NSString *userNick;

// 被回复人hongid
@property(nonatomic, readwrite) uint64_t repliedUserId;

// 被回复人nick
@property(nonatomic, readwrite, copy, null_resettable) NSString *repliedUserNick;

// 内容
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

// 评论时间
@property(nonatomic, readwrite) int64_t time;

@end

#pragma mark - CfProjectCommentParam

typedef GPB_ENUM(CfProjectCommentParam_FieldNumber) {
  CfProjectCommentParam_FieldNumber_Token = 1,
  CfProjectCommentParam_FieldNumber_ProjectId = 2,
  CfProjectCommentParam_FieldNumber_RepliedUserId = 3,
  CfProjectCommentParam_FieldNumber_Content = 4,
};

// 项目评论参数
@interface CfProjectCommentParam : GPBMessage

// 查询时不传递
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

// 项目id
@property(nonatomic, readwrite) int64_t projectId;

// 被评论人hongid 查询时不传递
@property(nonatomic, readwrite) uint64_t repliedUserId;

// 评论内容 查询时不传递
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - CfProjectCommentResp

typedef GPB_ENUM(CfProjectCommentResp_FieldNumber) {
  CfProjectCommentResp_FieldNumber_Resp = 1,
  CfProjectCommentResp_FieldNumber_Comment = 2,
  CfProjectCommentResp_FieldNumber_CommentsArray = 3,
};

// 项目评论返回
@interface CfProjectCommentResp : GPBMessage

@property(nonatomic, readwrite) BOOL hasResp;
@property(nonatomic, readwrite, strong, null_resettable) Response *resp;

// 新增时返回此
@property(nonatomic, readwrite) BOOL hasComment;
@property(nonatomic, readwrite, strong, null_resettable) CfProjectComment *comment;

// 查询时返回此
// |commentsArray| contains |CfProjectComment|
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray *commentsArray;
@property(nonatomic, readonly) NSUInteger commentsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

// @@protoc_insertion_point(global_scope)
